server.port=${PORT:0}
spring.application.name=order-service

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Eureka-server Configuration
eureka.client.serviceUrl.defaultZone=${EUREKA_URI:http://localhost:8012/eureka}
spring.devtools.restart.enabled=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}


# Resilience4j Circuit Breaker Configuration

# Circuit Breaker name
resilience4j.circuitbreaker.instances.findUserByIdCircuitBreaker.registerHealthIndicator=true

# Circuit Breaker Settings
resilience4j.circuitbreaker.instances.findUserByIdCircuitBreaker.slidingWindowSize=4
resilience4j.circuitbreaker.instances.findUserByIdCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.findUserByIdCircuitBreaker.waitDurationInOpenState=5000ms
resilience4j.circuitbreaker.instances.findUserByIdCircuitBreaker.slidingWindowType=TIME_BASED
resilience4j.circuitbreaker.instances.findUserByIdCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.findUserByIdCircuitBreaker.minimumNumberOfCalls=2
resilience4j.circuitbreaker.instances.findUserByIdCircuitBreaker.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.findUserByIdCircuitBreaker.timeoutDuration=1000ms

# Retry settings for the 'findUserById' method
resilience4j.retry.instances.findUserByIdRetry.maxAttempts=3
resilience4j.retry.instances.findUserByIdRetry.waitDuration=1000ms
resilience4j.retry.instances.findUserByIdRetry.exponentialBackoffEnabled=true
#resilience4j.retry.instances.findUserByIdRetry.retryExceptions=java.io.IOException,java.net.ConnectException